*********************
Equation output files
*********************

StatPP techniques that include a distinct Training Phase often yield a set of equations
(StatPP Parameters) that are used to carry information into the Production Phase.
(See section :ref:`background` of the Overview for a more complete explanation of these terms.)
Of course, these equations must be encoded in one or more equation output files.

The Observations and Measurements (O&M) model is again used as a guideline when encoding data
files. However, we focus more on the W3C Provenance Ontology (PROV-O) as a model for encoding
StatPP equation output. The various values stored in the equation output file are *entities* (equation coefficients and
other ancillary data) that were generated by some *activity* (e.g. the Development Phase), and
that activity was performed by some *agent* (the responsible organization).

In most cases a StatPP Equation File will contain one or more weather elements with their associated 
metadata, that were used as inputs into the regression, that create a set of outputs. These outputs 
include; an array of equation coefficient (including the Equation Constant), statistical values (Reduction_of_Variance,
Average_Predictand, etc...), and any associated ancillary and auxiliary coordinate variables.

 **Best Practice:**  *Files that potentially contain equation output
 should contain global attributes that describe the origin of the file itself. Some useful attributes
 include PROV__Entity, PROV__wasGeneratedBy, PROV__wasAtributedTo, and PROV__generatedAtTime.*

 **Best Practice:**  *Equation output variables that are used in StatPP and the names of their dimensions should have
 names that are drawn from the nomenclature of the technique.*

 **Best Practice:**  *All equation output variables should include the attribute PROV__Entity or something
 similar that indicates the nature of the variable and its use. Ideally, both the attribute name and value
 will be web-referencible URIs.*

Global attributes
=================

We begin with a set of global attributes that describe the file itself.

::

  |   :StatPPTime__FcstCyc = "06" ;
  |   :StatPPTime__SeasDayFmt = "StatPP__Data/Time/SeasDayFmt/MMDD" ;
  |   :PROV__wasAttributedTo = "StatPP__Data/Source/MDL" ;
  |   :institution = "NOAA/National Weather Service" ;
  |   :url = "http://www.nws.noaa.gov/mdl/, https://sats.nws.noaa.gov/~wisps/" ;
  |   :season = "warm" ;
  |   :StatPPTime__SeasEndDay = "0706" ;
  |   :PROV__wasGeneratedBy = "StatPP__Methods/Stat/MOSDev" ;
  |   :StatPPSystem__Status = "StatPP__Methods/System/Status/Dev" ;
  |   :StatPPTime__SeasBeginDay = "0702" ;
  |   :PROV__Entity = "StatPP__Data/Source/MOSEqnFile" ;
  |   :version = "WISPS-1.0" ;
  |   :file_id = "7426a556-9b99-468e-b73e-3825b763ce80" ;
  |   :Conventions = "CF-1.7 WISPS-1.0" ;
  |   :primary_variables = "MOS_Equations Standard_Error_Estimate Reduction_of_Variance Multiple_Correlation_Coefficient Predictand_Average" ;
  |   :StatPPTime__FcstCycFmt = "StatPP__Data/Time/FcstCycFmt/HH" ;

::

The W3C standard for provenance (PROV-O) provides key entries to describe the file and its history. Entries declare what sort of file this is,
how it was generated, the file version, the primary source of its contents, who created it, and when.
Many of these entries are entries in a codes registry where they can be more fully described by the data producer.

Included in the list of global attributes are three attributes support a common StatPP practice called "seasonal stratification."
Since a number of NWP biases change seasonally as weather patterns (and their simulation) shift,
many StatPP techniques repeat their development phase multiple times with seasonal datasets.
Thus, StatPPTime__SeasBeginDay and StatPPTime__SeasEndDay convey the first and last dates (in any year)
these equation outputs should be used. StatPPTime__SeasDayFmt conveys the encoding format for these dates.
Similarly, many StatPP techniques stratify their development phase by forecast cycle.
The next two attributes, StatPPTime__ForecastCycle and StatPPTime__FcstCycFmt, convey this concept.
Additionally, the attribute "season" should be included int he list of global attributes, identifying
the appropriate season for which the equation output is valid.

Finally, the attributes StatPPSystem__Status and StatPPSystem__Role reflect the practices of the author's institution.
They are presented here as a pattern that other data producers may choose to emulate.
StatPPSystem__Status tracks the maturity of the equations as they go through their development life cycle.
It can convey values such as *developmental*, *prototype*, *operational*, and *experimental*.
StatPPSystem__Role is also patterned on a specific institution and technique.
StatPPSystem__Role can take on the values *primary* and *backup*, designating primary and backup MOS equations.
(Primary equations are developed in ways that permit the most recent observation to serve as a predictor; backup
equations are developed with that predictor withheld.)

Equation output variables
=========================

The StatPP coefficients and Equation_Constant, for one or more MOS equations, should be saved as a single variable in the
equation output file, dimensioned by the number of stations, the number of coefficients (including the Equation_Constant) 
and the number of Predictands. The StatPP statistics, for one or more MOS equations, should each be stored as individual 
variables. The first example, below, contains the coefficients (including the Equation_Constant) of a set of MOS equations.
Note that the name of this variable and its dimensionality are not part of the CAMPS standard.
Rather, attributes are used to convey the information needed to successfully interpret the
variable's contents.

::

  |    float MOS_Equations(number_of_stations, max_eq_terms, number_of_predictands) ;
  |      MOS_Equations:PROV__Entity = "StatPP__Methods/Stat/MOS/MOSEqn" ;
  |      MOS_Equations:standard_name = "source" ;
  |      MOS_Equations:long_name = "MOS Equation Coefficients and Constants" ; MOS_Equations:coordinates = "station Equations_List Predictand_List" ;
  |      MOS_Equations:SOSA__usedProcedure = "( PolyLinReg )" ;
  |      MOS_Equations:ancillary_variables = "( MOS_Predictor_Coeffs Equation_Constant )" ;
  |      MOS_Equations:units = 1LL ;

::

The first, and perhaps most important, attribute we will discuss is PROV__Entity.
In effect, PROV__Entity helps the data producer convey to the data consumer "what it is."
In this case, it is the coefficients of one or more MOS Equations.
Ideally, the technical information found at StatPP__Data/Source/MOSEq will be sufficient to allow
a data consumer to read these data and use them effectively.

Additionally, the ancillary_variables attribute for a MOS_equations variable should contain a 
reference to the non-data-bearing variables â€œMOS_Predictor_Coeffs and Equation_Constant. 
These variables contain the appropriate metadata description to identify the type of information a MOS_equations variable contains.

The auxiliary coordinate variable attribute for a MOS equations output variable references an Equations_List 
and Predictand_List variable. These variables provide ordered lists that apply to the dimensions of the MOS equation variable.

Equations_List  corresponds to the dimension max_eq_terms, which stores an ordered list of the predictors that 
provide input to the set of equations, along with the equation constant, as a character array. The ordered input 
list references the non-data-bearing predictor variables that appear elsewhere in the file.  
The attributes assigned to each of those variables, provide all the metadata needed to access and use the predictors.

Predictand_List provides an ordered character output array, which plays a complementary role by identifying the predictands that are forecast by the equations.

In addition to the MOS equation variable, ordered input and output lists, and non-data-bearing predictor and predictand variables,
there are a number of variables that contain diagnostic information about the MOS development process.  Each of these variables is 
stored individually as primary variables within an equations output file. The following CDL shows an example of how such variables are encoded.

::

  |    float Standard_Error_Estimate(number_of_stations, number_of_predictands) ;
  |      Standard_Error_Estimate:PROV__Entity = "StatPP__Methods/Stat/MOS/OutptParams/MOSStdErrEst" ;
  |      Standard_Error_Estimate:standard_name = "source" ;
  |      Standard_Error_Estimate:long_name = "MOS Standard Error Estimate" ;
  |      Standard_Error_Estimate:coordinates = "station Predictand_List" ;
  |      Standard_Error_Estimate:SOSA__usedProcedure = "( PolyLinReg )" ;
  |      Standard_Error_Estimate:units = 1LL ;
  |    float Reduction_of_Variance(number_of_stations, number_of_predictands) ;
  |      Reduction_of_Variance:PROV__Entity = "StatPP__Methods/Stat/MOS/OutptParams/MOSRedOfVar" ;
  |      Reduction_of_Variance:standard_name = "source" ;
  |      Reduction_of_Variance:long_name = "MOS Reduction of Variance" ;
  |      Reduction_of_Variance:coordinates = "station Predictand_List" ;
  |      Reduction_of_Variance:SOSA__usedProcedure = "( PolyLinReg )" ;

::
